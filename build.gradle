plugins {
	id 'org.jetbrains.kotlin.jvm' version "1.3.50"
}

// java discord library versions
def jda = '4.0.0_524'
// lava player version
def lava = '1.3.22'
// big-math version
def bigmath = '2.2.1'
// reflections version
def reflection = '0.9.11'
// apache common cli version
def ccli = '1.4'

group 'com.wireless4024'
version '2.0'

sourceCompatibility = 1.8

repositories {
	mavenCentral()
	jcenter()
}

dependencies {
	/* JDA core of this project */
	implementation "net.dv8tion:JDA:${jda}"
	/* music player lib */
	implementation "com.sedmelluq:lavaplayer:${lava}"
	implementation "com.sedmelluq:jda-nas:1.1.0"
	/* BigMath lib for calculation */
	implementation "ch.obermuhlner:big-math:${bigmath}"
	/* JVM's reflections */
	implementation "org.reflections:reflections:${reflection}"
	implementation "com.google.guava:guava:28.1-jre"
	/* cli parser */
	implementation "commons-cli:commons-cli:${ccli}"
	/* mongodb driver */
	implementation "org.litote.kmongo:kmongo-coroutine:3.11.0"
	/* youtube api v3 */
	implementation "com.google.apis:google-api-services-youtube:v3-rev212-1.25.0"

	/* Kotlin Libs */
	/*
	implementation "org.jetbrains.kotlin:kotlin-script-util:1.3.50"
	implementation "org.jetbrains.kotlin:kotlin-compiler-embeddable:1.3.50"
	implementation "org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable:1.3.50"
	implementation "org.jetbrains.kotlin:kotlin-script-runtime:1.3.50"
	implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.50"*/
	implementation "org.jetbrains.kotlin:kotlin-stdlib:1.3.50"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0"

	/* sqlite */
	implementation "org.xerial:sqlite-jdbc:3.28.0"

	/* rhino javascript engine */
	implementation "org.javadelight:delight-rhino-sandbox:0.0.10"
	testCompile "junit:junit:4.12"
}

task run(type: JavaExec) {
	classpath sourceSets.main.runtimeClasspath
	main = "Main"
}

jar {
	baseName += '-full'
	destinationDirectory = file("$rootDir/jar")
	from(configurations.runtimeClasspath.collect {
		it.getName().endsWithAny(".jar", ".zip") ? zipTree(it) : it
	}) {
		exclude "META-INF/*.SF"
		exclude "META-INF/*.RSA"
		exclude "META-INF/MANIFEST.MF"
		exclude "META-INF/LICENSE"
	}
	manifest {
		attributes 'Main-Class': 'Main'
	}
}

compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}